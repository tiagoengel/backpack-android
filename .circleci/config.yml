aliases:
  - &environment
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28  # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m

      
  - &attach_workspace
    attach_workspace:
      at: ~/code

  - &gcloud_login
    name: Gcloud login
    command: |
      echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json

  - &default_steps
    - checkout
    - *attach_workspace

  - &test_steps
    - *default_steps
    - *gcloud_login
    - ./scripts/ci-tests.sh
  
version: 2

workflows:
  version: 2
  master:
    jobs:
      - "Build"
      - "Instrumented tests"
        requires: "Build"
      - "Screenshot tests"
        requires: "Build"

jobs:
  "Build":
    <<: *environment
    steps:
      - *default_steps
      - restore_cache:
          keys: 
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}-{{ checksum  "Backpack/build.gradle" }}
            - node-{{ checksum "package-lock.json" }}

      - run:
          name: Install tools
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            \. "$NVM_DIR/nvm.sh"
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm use' >> $BASH_ENV
            nvm install
            nvm use
            npm install -g greenkeeper-lockfile

            # Required for screenshot testing
            pip install Pillow

      - run:
          name: Download Dependencies
          command: |
            ./gradlew androidDependencies
            npm install

      - save_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}-{{ checksum  "Backpack/build.gradle" }}
          paths:
            - ~/.gradle

      - save_cache:
          key: node-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      - run:
          name: Build debug APK and release APK
          command: |
            npm run build
            ./gradlew :app:assembleDebug :app:assembleDebugAndroidTest :Backpack:assembleDebugAndroidTest check -PdisablePreDex
  
      # - run:
      #     name: Install gsutil dependency and copy test results data
      #     command: |
      #       sudo pip install -U crcmod
      #       sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
  "Instrumented tests"
    environment:
      TEST_METHOD: connected
    steps: *test_steps
  "Screenshot tests"
    environment:
      TEST_METHOD: screenshot
    steps: *test_steps